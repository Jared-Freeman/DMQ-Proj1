using System.Collections;
using System.Collections.Generic;
using UnityEngine;


namespace Utils
{
    /// <summary>
    /// Container for any and all context needed to generate any attack. 
    /// Not every member of this struct will be utilized for every attack.
    /// Designers are free to interpret this context as they please. 
    /// Context is generated by some combination of IO and state variables (on, for instance, a Player Actor)
    /// NOTE: Members are NOT guaranteed to be non-null!
    /// </summary>
    public class AttackContext
    {
        /// <summary>
        /// Empty constructor
        /// </summary>
        public AttackContext() { }
        /// <summary>
        /// Copy constructor
        /// </summary>
        /// <param name="other">Object to copy values from</param>
        public AttackContext(AttackContext other)
        {
            _Owner = other._Owner;
            _Team = other._Team;

            _InitialGameObject = other._InitialGameObject;
            _InitialPosition = other._InitialPosition;
            _InitialDirection = other._InitialDirection;

            _TargetGameObject = other._TargetGameObject;
            _TargetPosition = other._TargetPosition;
            _TargetDirection = other._TargetDirection;
        }

        public Actor _Owner = null;
        public Team _Team = null;

        public GameObject _InitialGameObject = null;
        public Vector3 _InitialPosition = Vector3.zero;
        public Vector3 _InitialDirection = Vector3.zero;

        public GameObject _TargetGameObject = null;
        public Vector3 _TargetPosition = Vector3.zero;
        public Vector3 _TargetDirection = Vector3.zero;
    }
}
